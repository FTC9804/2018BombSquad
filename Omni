//Version 1.0 coded Sep. 23, 2017 by Marcus.
//Designed to test the functionality of OmniDrive

//package declaration
package org.firstinspires.ftc.teamcode;

//import statements
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.hardware.DigitalChannelController;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.ServoController;
import com.qualcomm.robotcore.hardware.TouchSensor;
import com.qualcomm.robotcore.util.Range;

import static com.qualcomm.robotcore.hardware.DcMotorSimple.Direction;
import static com.qualcomm.robotcore.hardware.DcMotorSimple.Direction.FORWARD;
import static com.qualcomm.robotcore.hardware.DcMotorSimple.Direction.REVERSE;
import static com.qualcomm.robotcore.util.Range.clip;


@TeleOp(name = "OmniDrive", group = "LA Championships")
//@Disabled
public class Omni extends OpMode {

    //Variable declarations

    //Motors
    DcMotor rightMotor;   //right drive motor front
    DcMotor leftMotor;    //left drive motor front
    DcMotor topMotor;   //right drive motor back
    DcMotor bottomMotor;    //left drive motor back

    double gamepadrighty;
    double gamepadleftx;
    double gamepadrightx;
    double leftpower;
    double rightpower;
    double toppower;
    double bottompower;
    double sidePower;
    double spinPower;

    /* Initialize standard Hardware interfaces */
    public void init() { //use hardwaremap here instead of hwmap or ahwmap provided in sample code

        //motor configurations in the hardware map
        rightMotor = hardwareMap.dcMotor.get("m1");
        leftMotor = hardwareMap.dcMotor.get("m2");
        topMotor = hardwareMap.dcMotor.get("m3");
        bottomMotor = hardwareMap.dcMotor.get("m4");

        //Motor directions: set forward/reverse
        rightMotor.setDirection(REVERSE);
        leftMotor.setDirection(FORWARD);
        topMotor.setDirection(REVERSE);
        bottomMotor.setDirection(FORWARD);
    }

    public void loop() {
        //TODO Strafe!!  rotation  forward

        gamepadrighty = gamepad1.right_stick_y;
        gamepadrightx = gamepad1.right_stick_x;
        gamepadleftx = -(gamepad1.left_stick_x);

        //if we are rotating
        if(gamepadleftx > .05 || gamepadleftx < -.05) {

            leftpower = gamepadleftx;
            rightpower = -(gamepadleftx);
            toppower = gamepadleftx;
            bottompower = -(gamepadleftx);
        }
        // if we are not turning
        else {
            //forward backwards
            leftpower = gamepadrighty;
            rightpower = gamepadrighty;
            //strafe
            toppower = gamepadrightx;
            bottompower = gamepadrightx;
        }

        toppower = clip(toppower, -1, 1);
        bottompower = clip(bottompower, -1, 1);
        leftpower = clip(leftpower, -1, 1);
        rightpower = clip(rightpower, -1, 1);

        leftMotor.setPower(leftpower);
        rightMotor.setPower(rightpower);
        topMotor.setPower(toppower);
        bottomMotor.setPower(bottompower);

    }

}
