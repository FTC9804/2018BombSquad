//Package declaration
package org.firstinspires.ftc.teamcode;

//Import statements
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;

/**
 * Created by MarcusLeher on 30/12/2017.
 */

@Autonomous(name = "blueNOTcorner", group = "VuforiaAuto")
//@Disabled

//Autonomous to score ball and a block from the blue non-corner position
public class BLUEAUTONOTCORNER extends FunctionsForAuto {
    String vuMarkOutput = ""; //Set vuMarkOutput to the empty string

    public void runOpMode() throws InterruptedException { //runOpMode() method

        configure("blue", "relicSide"); //Configure with parameters blue and relicSide

        pause(.05); //pause for .05 seconds

        calibrateGyro(); //Calibrate the gyro

        //Telemetry
        telemetry.addData("calibrated", true);
        telemetry.update();

        pause(.5); //pause for .5 seconds

        introduceAngle(); //Introduce the angle

        pause(.5); //pause for .5 seconds

        waitForStart(); //Wait for start

        pause(.3); //pause for .5 seconds

        //Telemetry
        telemetry.addData("here", true);
        telemetry.update();

        dropFeelerMoveBallOnlyNewRobot(); //Run dropFeelerMoveBallOnlyNewRobot to score the ball

        pause(.15); //pause for .15 seconds

        vuMarkOutput = detectVuMark(3); //Run vuforia detection for 3 seconds

        pause(.15); //pause for .15 seconds

        driveNewIMU(7.75, 10, -.25, false, 0); //Drive backwards 7.75 inches at -.25 power keeping a 0 degree heading with a 10 second limit

        pause(.8); //pause for .8 seconds

        driveNewIMU(9.5, 10, -.25, false, 0); //Drive backwards 10.25 inches at -.25 power keeping a 0 degree heading with a 10 second limit

        pause(.4); //pause for .4 seconds

        spinMove(178, false, 10); //Spin to 178 degrees not starting at .3 power with a 10 second timeout

        pause(.45); //pause for .45 seconds

        if (vuMarkOutput.equalsIgnoreCase("left")) //If vuforia reads left
        {
            strafeNewIMU(3.5, 5, .65, 178); //Strafe to the right for 10.5 inches at .63 power keeping a 178 degree heading with a 5 second limit
        }
        else if (vuMarkOutput.equalsIgnoreCase("right")) //If vuforia reads right
        {
            strafeNewIMU(17.4, 5, .65, 178); //Strafe to the right for 26.5 inches at .63 power keeping a 178 degree heading with a 5 second limit
        }
        else //Else
        {
            strafeNewIMU(12, 5, .65, 178); //Strafe to the right for 18.5 inches at .63 power keeping a 178 degree heading with a 5 second limit
        }

        pause(.1); //pause for .1 seconds

        touch(true, false, false); //Run touch method with parameters true, false, and false, meaning we are running from blue not corner position
    }
}
