//Package declaration
package org.firstinspires.ftc.teamcode;

//Import statements
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;

/**
 * Created by MarcusLeher on 30/12/2017.
 */

@Autonomous(name = "redcorner", group = "VuforiaAuto")
//@Disabled

//Autonomous to score the ball and three blocks from the red corner position
public class REDAUTOCORNER extends FunctionsForAuto {
    String vuMarkOutput = ""; //Set vuMarkOutput to the empty string

    public void runOpMode() throws InterruptedException { //runOpMode() method

        configure("red", "relicSide"); //Configure with parameters red and relicSide

        pause(.05); //pause for .05 seconds

        calibrateGyro(); //Calibrate the gyro

        //Telemetry
        telemetry.addData("calibrated", true);
        telemetry.update();

        pause(.05); //pause for .05 seconds

        introduceAngle(); //Introduce the angle

        pause(.05); //pause for .05 seconds

        waitForStart(); //Wait for start

        pause(.05); //pause for .05 seconds

        //Telemetry
        telemetry.addData("here", true);
        telemetry.update();

        dropFeelerMoveBallOnlyNewRobot(); //Run dropFeelerMoveBallOnlyNewRobot to score the ball

        pause(.05); //pause for .05 seconds

        vuMarkOutput = detectVuMark(3); //Run vuforia detection for 2 seconds

        pause(.05); //pause for .05 seconds

        driveNewIMU(17.5, 10, .45, true, 0); //Drive forward 18 inches at .25 power keeping a 0 degree heading with a 10 second limit

        pause(1); //pause for .05 seconds

        spinMove (-88, false); //Spin to 88 degrees not starting at .33 power

        if (vuMarkOutput.equalsIgnoreCase("left")) //If vuforia reads left
        {
            strafeNewIMU(18.9, 5, -.65, -90);  //Strafe to the right for 17.9 inches at .65 power keeping a 90 degree heading with a 5 second limit
        }
        else if (vuMarkOutput.equalsIgnoreCase("right")) //If vuforia reads right
        {
            strafeNewIMU(1.7, 5, -.65, -90);
        }
        else //Else
        {
            strafeNewIMU(10.7, 5, -.65, -90); //Strafe to the right for 9.7 inches at .65 power keeping a 90 degree heading with a 5 second limit
        }

        pause(.1); //pause for .05 seconds



        touch(false, false, true);
    }
}
