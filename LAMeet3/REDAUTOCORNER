//Package declaration
package org.firstinspires.ftc.teamcode;

//Import statements
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;

import org.firstinspires.ftc.robotcore.external.navigation.DistanceUnit;

/**
 * Created by MarcusLeher on 30/12/2017.
 */

@Autonomous(name = "redcorner", group = "VuforiaAuto")
//@Disabled

//Autonomous to score the ball and three blocks from the red corner position
public class REDAUTOCORNER extends FunctionsForAuto {
    String vuMarkOutput = ""; //Set vuMarkOutput to the empty string

    public void runOpMode() throws InterruptedException { //runOpMode() method

        configure("red", "relicSide"); //Configure with parameters red and relicSide

        pause(.05); //pause for .05 seconds

        calibrateGyro(); //Calibrate the gyro

        //Telemetry
        telemetry.addData("calibrated", true);
        telemetry.update();

        pause(.05); //pause for .05 seconds

        introduceAngle(); //Introduce the angle

        pause(.05); //pause for .05 seconds

        waitForStart(); //Wait for start

        pause(.05); //pause for .05 seconds

        //Telemetry
        telemetry.addData("here", true);
        telemetry.update();

        dropFeelerMoveBallOnlyNewRobot(); //Run dropFeelerMoveBallOnlyNewRobot to score the ball

        pause(.05); //pause for .05 seconds

        vuMarkOutput = detectVuMark(1); //Run vuforia detection for 3 seconds

        pause(.05); //pause for .05 seconds

        driveNewIMU(5.55, 10, .45, true, 0); //Drive forward 7.8 inches at .45 power keeping a 0 degree heading with a 10 second limit

        pause(1); //pause for .4 seconds

        if (vuMarkOutput.equalsIgnoreCase("left")) //If vuforia reads left
        {
            driveNewIMU(16.9, 5, .45, true, 0);
        }
        else if (vuMarkOutput.equalsIgnoreCase("right")) //If vuforia reads right
        {
            driveNewIMU(1.75, 5, .45, true, 0); //Strafe to the left for 3.8 inches at -.63 power keeping a -88 degree heading with a 5 second limit
        }
        else //Else
        {
            driveNewIMU(8.8, 5, .45, true, 0); //Strafe to the left for 11.8 inches at -.63 power keeping a -88 degree heading with a 5 second limit
        }

        pause(.1);

        spinMove (-88, false, 5); //Spin to -88 degrees not starting at .3 power with a 8 second timeout

        pause(.1); //pause for .1 seconds

        touch(false, false, true); //Run touch method with parameters false, false, and true, meaning we are running from red corner position

//        spinMove(88, false, 5);
//
//        getBlocks(60);
//
//        scoreBlock(88);
//
//




//        pause(10);
//
//
//
//        if (this.getRuntime() < 25.5) {
//
//            spinMove(88, false, 5);
//
//            pause(.1);
//
//            if (this.getRuntime()<32.5) {
//                getBlocks(60);
//            }
//
//
//            pause(.1);
//
//            if (this.getRuntime()<40.8) {
//                if (sensorB.getDistance(DistanceUnit.CM) < 10 || sensorC.getDistance(DistanceUnit.CM) < 10) {
//                    scoreBlock(88);
//                } else {
//                    if (this.getRuntime()<50.8) {
//                        driveNewIMU(88, 5, -.5, false, 88);
//                        driveNewIMU(4, 1.5, .3, true, 88);
//                    }
//                }
//            }
//
//
//        }

    }
}
