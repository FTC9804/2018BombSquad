//Package declaration
package org.firstinspires.ftc.teamcode;

//Import statements
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import android.media.MediaPlayer;
import android.media.audiofx.AudioEffect;
import android.media.MediaPlayer.OnBufferingUpdateListener;
import android.media.MediaPlayer.TrackInfo;
import java.util.*;


/**
 * Created by MarcusLeher on 30/12/2017.
 */

@Autonomous(name = "bluecorner", group = "VuforiaAuto")
//@Disabled

//Autonomous to score the ball and three blocks from the blue corner position
public class BLUEAUTOCORNER extends FunctionsForAuto {

    String vuMarkOutput = ""; //Set vuMarkOutput to the empty string


    public void runOpMode() throws InterruptedException { //runOpMode() method

        configure("blue", "relicSide"); //Configure with parameters blue and relicSide

        pause(.05); //pause for .05 seconds

        calibrateGyro(); //Calibrate the gyro

        //Telemetry
        telemetry.addData("calibrated", true);
        telemetry.update();

        pause(.05); //pause for .05 seconds

        introduceAngle(); //Introduce the angle

        pause(.05); //pause for .05 seconds

        waitForStart(); //Wait for start

        pause(.05); //pause for .05 seconds

        //Telemetry
        telemetry.addData("here", true);
        telemetry.update();

        dropFeelerMoveBallOnlyNewRobot(); //Run dropFeelerMoveBallOnlyNewRobot to score the ball

        pause(.05); //pause for .05 seconds

        vuMarkOutput = detectVuMark(2); //Run vuforia detection for 3 seconds

        pause(.05); //pause for .05 seconds

        driveNewIMU(6.75, 10, -.25, false, 0); //Drive backwards 9.75 inches at -.25 power keeping a 0 degree heading with a 10 second limit

        pause(.75); //pause for .75 seconds

        driveNewIMU(11, 10, -.25, false, 0); //Drive backwards 11.7 inches at -.25 power keeping a 0 degree heading with a 10 second limit

        pause(1.3); //Pause for .5 seconds

        if (vuMarkOutput.equalsIgnoreCase("left")) //If vuforia reads left
        {
            //Do nothing
        }
        else if (vuMarkOutput.equalsIgnoreCase("right")) //If vuforia reads right
        {
            driveNewIMU(14, 5, -.32, false, 0);
        }
        else //Else
        {
            driveNewIMU(6.4, 5, -.32, false, 0);
        }

        spinMove (-88, false, 8); //Spin to -88 degrees not starting at .3 power with a 8 second timeout

        touch(true, true, false); //Run touch method with parameters true, true, and false, meaning we are running from blue corner position
    }
}
